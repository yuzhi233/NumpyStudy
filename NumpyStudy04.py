# -*- coding: utf-8 -*-
"""
Created on Sun Feb  2 10:09:13 2020

@author: zhoubo
"""


#%%-------------------------Numpy中的转置------------------------------------------------------

import numpy as np

t1 = np.arange(24).reshape((4,6))
print(t1)

#方法1
t2 = t1.transpose()#转置
print(t2)

#方法2
t3 = t1.T #t1的属性
print(t3)

#方法3 
#交换2轴
#2d中 0 轴是行 1轴是列
t4 =t1.swapaxes(1,0)
print(t4)

#%%------------------------Numpy索引和切片------------------------------------
import numpy as np



t1 =np.arange(24).reshape((4,6))#例子是4*6的2d 数组
print('t1:\n',t1)




# -----------------------------取行-------------------- -------------
print('t1[2]取第3行 :\n',t1[2])#取第3行 
#print(t1[2].shape)#取出一行变成1d 的了

#一个通用方法：(这里拿来取行用)--------t1[,]前面填行后面填列
print('t1[2,:]取第3行:\n',t1[2,:])#取第3行，:表示每一列都要

print('t1[2:] 取连续多行(第3，4行):\n',t1[2:])

print('t1[[0,2]]取不连续多行（1,3行）:\n',t1[[0,2]])#要是想取不连续的多行填入一个行索引的列表，外面再用方括号

print('------------------------------------------')




#----------------------------取列-----------------------------
print('t1[:,2]:\n',t1[:,2])#取第3列

#print('取出的1列的shape:\n',t1[:,2].shape)#1d的列

#取连续多列
print(t1[:,2:])#取3-最后列
print(t1[:,2::1])#后面加了个取步长
#取不连续多列
print('t1[:,[0,2,5]] 取第1列 第3列 第6列:\n',t1[:,[0,2,5]])#取第1列 第3列 第6列

#------------------------------取多行多列-------------------

#取具体哪个值
#取第三行和第四列的值
print('取第三行和第四列的值:\n',t1[2,3])
#print('取第三行和第四列的值:\n',t1[2][3])#取值也可以这样写 取轴上的索引
print('取出一个数值的数据类型:\n',type(t1[2,3]))



#-取1-3行 2-4列
print('#取1-3行 2-4列:\n',t1[0:3,1:4])



#取多个不相邻的值（点） 这种写法不是你想象中的取某几行几列
print('(2,2)点和(3,3)点:\n',t1[[2,3],[2,3]])


print('t1:\n',t1)
















